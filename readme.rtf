{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;\f2\fswiss\fcharset0 Helvetica-Oblique;
\f3\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\csgray\c0;}
\margl1440\margr1440\vieww28500\viewh16080\viewkind1
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx12395\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \

\f1\b Overall organization
\f0\b0 \
./stringer_2019/\
contains all large data files including the original data from the Stringer 2019 paper folder, it can be on a seperate drive or in the same code folder, just make sure 'data_dir' points to the right place in each script\
\
./meme_v1_bpl/data/ contains the scripts to generate files that one might keep on a separate drive or download directly instead of generating themselves.\
\
./meme_v1_bpl/figures/ has a folder for each figure in the paper. within it are scripts that either generate figures or data. The data files have '_data' appended to them and take a non-neglibible amount of time to run then save processed data or simulations directly into the figure folder. The figure files have '_fig' appended to them and they read in this processed data to generate figures for the paper. The comments indicate the panel being saved (e.g., Fig 2A). \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx12395\pardirnatural\partightenfactor0
\cf0 ./meme_v1_bpl/src/ contains the main function used to analyse and simulate, including the cvPCA estimator and MEME estimator. \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx12395\pardirnatural\partightenfactor0
\cf0 \
\

\f1\b Detailed description to reproduce results.
\f0\b0 \

\f1\b Processing raw data
\f0\b0 \
Download data from:\
https://figshare.com/articles/dataset/Recordings_of_ten_thousand_neurons_in_visual_cortex_in_response_to_2_800_natural_images/6845348\
to:\
 './stringer_2019/orig_stringer_2019_data/'\
update\
'./data/data_dir.txt' to the directory that /stringer_2019/' is in.\
\
Then using:\
 './data/convert_stringer_mat_to_xr.py' \
it is converted from .mat format to xarray format 'dataset's saved to:\
./stringer_2019/processed_data/neural_responses/\
with three possible prepends:\
raw_ is just the raw responses\
ms_ is the mean subtracted responses\
spont_sub_ is the mean subtracted responses with spontaneous activity subtracted (see Stringer 2019)\
All recordings including cell position (unsure of exact units).\
For recordings that have it the tdtomato+ labels are also saved in a csv file in\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx12395\pardirnatural\partightenfactor0
\cf0 ./stringer_2019/processed_data/red_cell/\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx12395\pardirnatural\partightenfactor0
\cf0 \

\f1\b Estimating signal and noise covariance matrices\

\f0\b0 For simulations we need estimates of signal and noise from the original data, use:\
./data/est_mean_SN_cov_stringer.py \
saves to:\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx12395\pardirnatural\partightenfactor0
\cf0 ./processed_data/stringer_sn_covs/\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx12395\pardirnatural\partightenfactor0
\cf0 \
\
ANALYSIS: pre-processed data is then used to run simulations with some intermediate files saved to help with simulations. Organized by figure.\
\
FIG 1: conceptual figure with no real data.\
\
FIG 3: estimates of power-laws from stringer data (this has to be run before FIG 2 scripts to generate power-law estimates that are the basis of simulation comparisons)\
The main computational time is spent on\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 'figures/fig3/est_sig_eig_spec_data.py'\
first calculates eigenmoments and bootstrap samples of eigenmoments\
saved in folder respectively as \
'./mom_est.nc' and './mom_dist.nc'\
then estimates power laws using cvPCA and power laws and broken powerlaws using MEME. Saves these in csv\
'str_pt_estimates_all.csv'\
then generates 'est_sig_eig_spec_figs.py'\
\

\f2\i where does bpl2_sims come from? these are used as CI's in Fig 3H\
I found it in parameteric_bootstrap_bpl2.py in the original eigenspectra file
\f0\i0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx12395\pardirnatural\partightenfactor0
\cf0 FIG 2: multivariate normal simulations from true power-laws\
'small_power_law_sims_' run small simulations (~100 neurons) to demonstrate differences between MEME and cvPCA.\
'match_stringer_cov_sims_data' run simulations matching signal and noise covariance from original data.\
\

\f2\i where does rec_0_ms_natimg2800_M160825_MP027_2016-12-14_bsrun_1_pbci_pl.csv\
come from? these are used in Fig 2 EF\
it is in the folder \
match_stringer_cov_sims_data\
\

\f0\i0 FIG 4\
this generates all of FIG 4\
'eigenmode_tuning_data.py' generates the data that is the basis of all FIG 4 and the neural data results in FIG 5. Because these files are large they are saved to: \
'./stringer_2019/processed_data/eig_tuning/'\
\

\f2\i why does eig_tuning_dir + 'neur_snr_' have two rows?
\f0\i0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx12395\pardirnatural\partightenfactor0

\f2\i \cf0 why does eig_tuning_dir + 'pc_snr_'  have two columns?\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx12395\pardirnatural\partightenfactor0

\f0\i0 \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx12395\pardirnatural\partightenfactor0
\cf0 Notes, I am currently just making sure all figures can be made and noting where data should be coming from and putting it all into _data files. text in italics is questions about where data came from.\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx12395\pardirnatural\partightenfactor0
\cf0 FIG 5\
generates all of FIG 4\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx12395\pardirnatural\partightenfactor0
\cf0 no _data files, uses results from FIG 4 folder:\
'eigenmode_tuning_data.py'\
saved to:\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx12395\pardirnatural\partightenfactor0
\cf0 './stringer_2019/processed_data/eig_tuning/'\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx12395\pardirnatural\partightenfactor0
\cf0 \
\
GENERAL TODO\
choose one normalization method, scale by var for example.\
figure out how to run it on della.\
put equation numbers on each.\
put src test into v1_bpl_sims\
\
# I want to test uploading this onto della then running the whole thing \
# first upload to github\
# then download to della\
# then load files into a stringer 2019 folder\
which files do I actually use:\
allimgs.mat\
natimg2800_M160825_MP027_2016-12-14.mat, 7 of these\
\
#then I run these files:\
convert_stringer_mat_to_xr.py\
est_mean_SN_cov_stringer_data.py\
\
\
git config --global user.name "
\f3\fs22 \cf2 \CocoaLigature0 dp4846
\f0\fs24 \cf0 \CocoaLigature1 "\
git config --global user.email "
\f3\fs22 \cf2 \CocoaLigature0 dp4846@princeton.edu
\f0\fs24 \cf0 \CocoaLigature1 "\
}